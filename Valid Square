class Solution {
public:

    int get_length(vector<int>& a, vector<int>& b){
        return (a[0]-b[0])*(a[0]-b[0]) + (a[1]-b[1])*(a[1]-b[1]);
    }

    bool validSquare(vector<int>& p1, vector<int>& p2, vector<int>& p3, vector<int>& p4) {
        vector<int> sides = {
            get_length(p1,p2),
            get_length(p1,p3),
            get_length(p1,p4),
            get_length(p2,p3),
            get_length(p2,p4),
            get_length(p3,p4),
        };
        unordered_map<int,int> mp;
        for(auto& s : sides){
            mp[s]++;
        }
        if(mp.size() != 2){
            return false;
        }
        for(auto& p : mp){
            if (p.second != 4 && p.second != 2) {
                return false;
            }
        }
        sort(sides.begin(), sides.end());
        return sides[0] > 0 && sides[0] == sides[1] && sides[1] == sides[2] && sides[2] == sides[3] &&       sides[4] == sides[5];
    }
};
